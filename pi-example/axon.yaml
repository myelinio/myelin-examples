#  https://cloud.google.com/solutions/spark-on-kubernetes-engine
#
#  gcloud iam service-accounts create spark-bq --display-name spark-bq
#  export SA_EMAIL=$(gcloud iam service-accounts list --filter="displayName:spark-bq" --format='value(email)')
#  export PROJECT=$(gcloud info --format='value(config.project)')
#  gcloud projects add-iam-policy-binding $PROJECT --member serviceAccount:$SA_EMAIL --role roles/storage.admin
#  gcloud projects add-iam-policy-binding $PROJECT --member serviceAccount:$SA_EMAIL --role roles/bigquery.dataOwner
#  gcloud projects add-iam-policy-binding $PROJECT --member serviceAccount:$SA_EMAIL --role roles/bigquery.jobUser
#  gcloud iam service-accounts keys create spark-sa.json --iam-account $SA_EMAIL
#  kubectl create secret generic spark-sa --from-file=spark-sa.json
#  kubectl create clusterrolebinding user-admin-binding --clusterrole=cluster-admin --user=$(gcloud config get-value account)
#  kubectl create clusterrolebinding --clusterrole=cluster-admin --serviceaccount=default:default spark-admin
#  kubectl create serviceaccount spark
#  kubectl create clusterrolebinding spark-role --clusterrole=edit --serviceaccount=myelin:spark --namespace=myelin
apiVersion: myelinproj.io/v1alpha1
kind: Axon
metadata:
  name: spark-pi-axon
spec:
  serviceAccountName: myelin-app-myelin
  artifacts:
    - name: spark-job-source
      path: /src
      git:
        repo: https://github.com/myelinio/myelin-examples.git
        revision: master
  volume:
    name: spark-job-axon-store
    hostPath:
      path: /var/lib/myelin
  tasks:
    - name: SparkTask
      spark:
#        image: registry-intl.eu-central-1.aliyuncs.com/myelinproj/pi-example:1.0.1-145-gf0c2051
        imageBuild:
          repositoryName: pi-example
          artifact: spark-job-source
          buildLocation: /src/pi-example/
          dockerfile:
            path: Dockerfile
          volumeMounts:
            - name: google-cloud-key
              mountPath: /src/pi-example/secrets
          volumes:
            - name: google-cloud-key
              secret:
                secretName: spark-sa
        sparkSpec:
          properties: |
            spark.kubernetes.driverEnv.GCS_PROJECT_ID myelin-development
            spark.kubernetes.driverEnv.GOOGLE_APPLICATION_CREDENTIALS /mnt/secrets/spark-sa.json
            spark.kubernetes.container.image docker.io/myelinio/spark-client:v2.3.0-k8s-1.14-1
            spark.kubernetes.driver.secrets.spark-sa  /mnt/secrets
            spark.kubernetes.executor.secrets.spark-sa /mnt/secrets
            spark.kubernetes.authenticate.driver.serviceAccountName	spark
            spark.driver.cores 0.1
            spark.executor.instances 2
            spark.executor.cores 1
            spark.executor.memory 512m
            spark.driver.memory 1024m
            spark.executorEnv.GCS_PROJECT_ID    myelin-development
            spark.executorEnv.GOOGLE_APPLICATION_CREDENTIALS /mnt/secrets/spark-sa.json
            spark.hadoop.google.cloud.auth.service.account.enable true
            spark.hadoop.google.cloud.auth.service.account.json.keyfile /mnt/secrets/spark-sa.json
            spark.hadoop.fs.gs.project.id myelin-development
            spark.hadoop.fs.gs.system.bucket myelin-development-spark-on-k8s
            spark.dynamicAllocation.executorIdleTimeout 600s

          class: spark.pi.SparkPi
          jars:
            - http://central.maven.org/maven2/com/databricks/spark-avro_2.11/4.0.0/spark-avro_2.11-4.0.0.jar
            - gs://myelin-development-spark-on-k8s2/jars/pi-example-1.0-SNAPSHOT-jar-with-dependencies.jar
  sensors:
    - name: SparkTask
      tasks:
        - resourceExecutor:
            task: SparkTask
#      triggers:
#        - name: RestTrigger
#          type: Rest
